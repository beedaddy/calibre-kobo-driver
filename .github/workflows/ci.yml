---
# vim: fileencoding=UTF-8:expandtab:autoindent:ts=2:sts=2:sw=2:filetype=yaml
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow
name: CI

# Controls when the action will run. Workflow runs when manually triggered
# using the UI or API.
"on":
  push:
  pull_request:

# A workflow run is made up of one or more jobs that can run sequentially or
# in parallel
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - "ubuntu-latest"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          PLATFORM=$(uname)
          if [ "${PLATFORM}" = "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y zsh gettext libegl1 libopengl0 libglx0 libxkbcommon0
          fi

      # yamllint disable rule:line-length
      - name: Set environment variables
        run: |
          CALIBRE_DIR="$(mktemp -d XXXXXXXX)"
          printf 'CALIBRE_DIR="%s"\n' "${CALIBRE_DIR}" >>"${GITHUB_ENV}"
          printf 'CALIBRE_CONFIG_DIRECTORY="%s"\n' "${CALIBRE_DIR}/config" >>"${GITHUB_ENV}"
          printf 'CALIBRE_TEMP_DIR="%s"\n' "${CALIBRE_DIR}/tmp" >>"${GITHUB_ENV}"
      # yamllint enable rule:line-length
      - name: Create calibre directories
        run: |
          mkdir -p "${CALIBRE_CONFIG_DIRECTORY}" "${CALIBRE_TEMP_DIR}"

      - name: Install calibre from upstream
        run: ./scripts/update-calibre.py

      - name: Build plugin ZIP files
        run: ./scripts/build.sh

      - name: Install Python test dependencies
        run: |
          set -x
          python3 -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            python3 -m pip install -r requirements.txt
          fi
          if [ -f scripts/requirements.txt ]; then
            python3 -m pip install -r scripts/requirements.txt
          fi
          if [ -f tests/requirements.txt ]; then
            python3 -m pip install -r tests/requirements.txt
          fi

      - name: Run tests
        run: ./scripts/build.sh test
